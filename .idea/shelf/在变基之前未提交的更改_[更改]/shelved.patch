Index: Input/KeyBoardInputThread.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import keyboard\r\nfrom struct import pack\r\nfrom socket import socket, AF_INET, SOCK_STREAM, IPPROTO_TCP, error\r\nfrom PyQt5.QtCore import QThread\r\n\r\nclass KeyBoardInputThread(QThread):\r\n    def __init__(self, addr, port, parent=None):\r\n        super(KeyBoardInputThread, self).__init__(parent)\r\n        self.addr = addr\r\n        self.port = port\r\n        self.tcp_client = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)\r\n\r\n    def run(self):\r\n        try:\r\n            self.tcp_client.connect((self.addr, self.port))\r\n        except error:\r\n            print(\"error\")\r\n        else:\r\n            while True:\r\n                key_body = 0x00000000\r\n                if keyboard.is_pressed('K') or keyboard.is_pressed('k'):\r\n                    print('Key-K is pressed')\r\n                    key_body |= 0x10000000\r\n                try:\r\n                    self.tcp_client.sendall(pack('!I I', key_body, 0x0000807F))\r\n                except error:\r\n                    print('send error')\r\n                    break\r\n\r\n    def Stop(self):\r\n        self.tcp_client.close()\r\n        self.terminate()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Input/KeyBoardInputThread.py b/Input/KeyBoardInputThread.py
--- a/Input/KeyBoardInputThread.py	(revision 5d23b6623febe45bc0dbafbd97152bc51509d820)
+++ b/Input/KeyBoardInputThread.py	(date 1720950567015)
@@ -1,20 +1,28 @@
+from typing import Union, Type
+
 import keyboard
 from struct import pack
 from socket import socket, AF_INET, SOCK_STREAM, IPPROTO_TCP, error
 from PyQt5.QtCore import QThread
+from PyQt5.QtWidgets import QPushButton
+
 
 class KeyBoardInputThread(QThread):
-    def __init__(self, addr, port, parent=None):
+
+    def __init__(self, addr:str, port:int, push_button:QPushButton, parent=None):
         super(KeyBoardInputThread, self).__init__(parent)
         self.addr = addr
         self.port = port
         self.tcp_client = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)
+        self.pushButtonConnect_2 = push_button
 
     def run(self):
         try:
             self.tcp_client.connect((self.addr, self.port))
         except error:
             print("error")
+            self.pushButtonConnect_2.setEnabled(True)
+            self.pushButtonConnect_2.setText('Connect')
         else:
             while True:
                 key_body = 0x00000000
@@ -24,9 +32,14 @@
                 try:
                     self.tcp_client.sendall(pack('!I I', key_body, 0x0000807F))
                 except error:
-                    print('send error')
-                    break
+                    print("send error! reconnect...")
+                    while True:
+                        try:
+                            self.tcp_client = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)
+                            self.tcp_client.connect((self.addr, self.port))
+                        except error:
+                            print('connect error')
 
     def Stop(self):
         self.tcp_client.close()
-        self.terminate()
\ No newline at end of file
+        self.terminate()
Index: StreamControl/StreamControl.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from  Input import KeyBoardInputThread\r\nfrom vlc import Instance\r\nfrom GUI.GuiCore import Ui_PlayerMainWindow\r\nfrom PyQt5.QtWidgets import QMainWindow\r\n\r\n\r\nclass StreamControl(QMainWindow, Ui_PlayerMainWindow):\r\n    def __init__(self, parent=None):\r\n        super(StreamControl, self).__init__(parent)\r\n        super(StreamControl, self).__init__()\r\n        self.setupUi(self)\r\n        self.vlc_instance = Instance()\r\n\r\n        self.tcp_client = None\r\n        self.player = self.vlc_instance.media_player_new()\r\n        self.player.set_hwnd(self.videoFrame.winId())\r\n\r\n        self.pushButtonControlStream.clicked.connect(self.slot_push_button_control_stream)\r\n        self.pushButtonConnect.clicked.connect(self.slot_push_button_connect)\r\n        self.pushButtonConnect_2.clicked.connect(self.slot_push_button_connect_2)\r\n\r\n        self.keyboard_thread = None\r\n\r\n    def slot_push_button_control_stream(self):\r\n        if self.pushButtonControlStream.text() == 'Play':\r\n            self.pushButtonControlStream.setText('Stop')\r\n            self.lineEditRtspAddress.setDisabled(True)\r\n            self.player.set_media(self.vlc_instance.media_new(self.lineEditRtspAddress.text()))\r\n            self.player.play()\r\n        else:\r\n            self.pushButtonControlStream.setText('Play')\r\n            self.lineEditRtspAddress.setEnabled(True)\r\n            self.player.set_pause(1)\r\n\r\n    def slot_push_button_connect(self):\r\n        pass\r\n\r\n    def slot_push_button_connect_2(self):\r\n        if self.keyboard_thread is None:\r\n            port = int(self.lineEditIPPort_2.text())\r\n            addr = self.lineEditIPAddr_2.text()\r\n            self.keyboard_thread = KeyBoardInputThread(addr, port)\r\n            self.keyboard_thread.start()\r\n            self.pushButtonConnect_2.setText('Disconnect')\r\n        else:\r\n            self.keyboard_thread.Stop()\r\n            self.keyboard_thread = None\r\n            self.pushButtonConnect_2.setText('Connect')\r\n\r\n    def slot_update_thread_finish_signal(self):\r\n        self.keyboard_thread = None\r\n        self.pushButtonConnect_2.setText('Connect')
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/StreamControl/StreamControl.py b/StreamControl/StreamControl.py
--- a/StreamControl/StreamControl.py	(revision 5d23b6623febe45bc0dbafbd97152bc51509d820)
+++ b/StreamControl/StreamControl.py	(date 1720949597579)
@@ -36,17 +36,14 @@
         pass
 
     def slot_push_button_connect_2(self):
-        if self.keyboard_thread is None:
+        if self.pushButtonConnect_2.text() == 'Connect':
             port = int(self.lineEditIPPort_2.text())
             addr = self.lineEditIPAddr_2.text()
-            self.keyboard_thread = KeyBoardInputThread(addr, port)
-            self.keyboard_thread.start()
             self.pushButtonConnect_2.setText('Disconnect')
+            self.pushButtonConnect_2.setDisabled(True)
+            self.keyboard_thread = KeyBoardInputThread(addr, port,self.pushButtonConnect_2)
+            self.keyboard_thread.start()
         else:
             self.keyboard_thread.Stop()
             self.keyboard_thread = None
-            self.pushButtonConnect_2.setText('Connect')
-
-    def slot_update_thread_finish_signal(self):
-        self.keyboard_thread = None
-        self.pushButtonConnect_2.setText('Connect')
\ No newline at end of file
+            self.pushButtonConnect_2.setText('Connect')
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1e642d59-dae0-4e27-bd2e-bc3f47196742\" name=\"更改\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/StreamPlayer.iml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Input/KeyBoardInputThread.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Input/__init__.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/StreamControl/StreamControl.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/StreamControl/__init__.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/requirements.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.gitignore\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/opencv.iml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2jEHrTxdTki2Laygr5j9pcyPSHy\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n    <option name=\"showMembers\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.main.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"develop\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StreamPlayer\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-975db3bf15a3-31b6be0877a2-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.18034.82\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"应用程序级\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"1e642d59-dae0-4e27-bd2e-bc3f47196742\" name=\"更改\" comment=\"\" />\r\n      <created>1720945515593</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1720945515593</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5d23b6623febe45bc0dbafbd97152bc51509d820)
+++ b/.idea/workspace.xml	(date 1720964458822)
@@ -4,19 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="1e642d59-dae0-4e27-bd2e-bc3f47196742" name="更改" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/StreamPlayer.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Input/KeyBoardInputThread.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Input/__init__.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/StreamControl/StreamControl.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/StreamControl/__init__.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/requirements.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/opencv.iml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
+    <list default="true" id="1e642d59-dae0-4e27-bd2e-bc3f47196742" name="更改" comment="alpha-0.8.0&#10;commit：&#10;目前完成了基本功能的编写，具体如下：&#10;- 能够进行流媒体播放，在输入框中输入流媒体播放地址即可播放，音视频能够基本同步&#10;- 能够进行TCP收发包,计划有一个TCP调试的功能&#10;- 写了一个按键检测的功能。&#10;目前已知缺陷：&#10;- 流媒体播放固定分辨率为640x480，目前没有添加可调分辩率的功能&#10;- 程序调用的外置的开源播放器vlc，需要安装相关组件才可播放。&#10;- 按键检测功能只写了一个，具体转输协议后续更新。&#10;- 目前TCP调试功能不可用，只有一个设计好的UI界面">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Input/KeyBoardInputThread.py" beforeDir="false" afterPath="$PROJECT_DIR$/Input/KeyBoardInputThread.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/StreamControl/StreamControl.py" beforeDir="false" afterPath="$PROJECT_DIR$/StreamControl/StreamControl.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -46,15 +37,15 @@
     <option name="showLibraryContents" value="true" />
     <option name="showMembers" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Python.main.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "develop",
-    "ignore.virus.scanning.warn.message": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Python.main.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;develop&quot;,
+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RunManager">
     <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="StreamPlayer" />
@@ -100,6 +91,29 @@
       <option name="presentableId" value="Default" />
       <updated>1720945515593</updated>
     </task>
+    <task id="LOCAL-00001" summary="alpha-0.8.0&#10;commit：&#10;目前完成了基本功能的编写，具体如下：&#10;- 能够进行流媒体播放，在输入框中输入流媒体播放地址即可播放，音视频能够基本同步&#10;- 能够进行TCP收发包&#10;- 写了一个按键检测的功能。&#10;目前已知缺陷：&#10;- 流媒体播放固定分辨率为640x480，目前没有添加可调分辩率的功能&#10;- 程序调用的外置的开源播放器vlc，需要安装相关组件才可播放。&#10;- 按键检测功能只写了一个，具体转输协议后续更新。">
+      <option name="closed" value="true" />
+      <created>1720947542452</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1720947542452</updated>
+    </task>
+    <task id="LOCAL-00002" summary="alpha-0.8.0&#10;commit：&#10;目前完成了基本功能的编写，具体如下：&#10;- 能够进行流媒体播放，在输入框中输入流媒体播放地址即可播放，音视频能够基本同步&#10;- 能够进行TCP收发包,计划有一个TCP调试的功能&#10;- 写了一个按键检测的功能。&#10;目前已知缺陷：&#10;- 流媒体播放固定分辨率为640x480，目前没有添加可调分辩率的功能&#10;- 程序调用的外置的开源播放器vlc，需要安装相关组件才可播放。&#10;- 按键检测功能只写了一个，具体转输协议后续更新。&#10;- 目前TCP调试功能不可用，只有一个设计好的UI界面">
+      <option name="closed" value="true" />
+      <created>1720947656517</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1720947656517</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="a 0.8.0" />
+    <MESSAGE value="alpha-0.8.0&#10;commit：&#10;目前完成了基本功能的编写，具体如下：&#10;- 能够进行流媒体播放，在输入框中输入流媒体播放地址即可播放，音视频能够基本同步&#10;- 能够进行TCP收发包&#10;- 写了一个按键检测的功能。&#10;目前已知缺陷：&#10;- 流媒体播放固定分辨率为640x480，目前没有添加可调分辩率的功能&#10;- 程序调用的外置的开源播放器vlc，需要安装相关组件才可播放。&#10;- 按键检测功能只写了一个，具体转输协议后续更新。" />
+    <MESSAGE value="alpha-0.8.0&#10;commit：&#10;目前完成了基本功能的编写，具体如下：&#10;- 能够进行流媒体播放，在输入框中输入流媒体播放地址即可播放，音视频能够基本同步&#10;- 能够进行TCP收发包,计划有一个TCP调试的功能&#10;- 写了一个按键检测的功能。&#10;目前已知缺陷：&#10;- 流媒体播放固定分辨率为640x480，目前没有添加可调分辩率的功能&#10;- 程序调用的外置的开源播放器vlc，需要安装相关组件才可播放。&#10;- 按键检测功能只写了一个，具体转输协议后续更新。&#10;- 目前TCP调试功能不可用，只有一个设计好的UI界面" />
+    <option name="LAST_COMMIT_MESSAGE" value="alpha-0.8.0&#10;commit：&#10;目前完成了基本功能的编写，具体如下：&#10;- 能够进行流媒体播放，在输入框中输入流媒体播放地址即可播放，音视频能够基本同步&#10;- 能够进行TCP收发包,计划有一个TCP调试的功能&#10;- 写了一个按键检测的功能。&#10;目前已知缺陷：&#10;- 流媒体播放固定分辨率为640x480，目前没有添加可调分辩率的功能&#10;- 程序调用的外置的开源播放器vlc，需要安装相关组件才可播放。&#10;- 按键检测功能只写了一个，具体转输协议后续更新。&#10;- 目前TCP调试功能不可用，只有一个设计好的UI界面" />
+  </component>
 </project>
\ No newline at end of file
